<?xml version="1.0" encoding="utf-8" ?>
<views:BasePage  xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 xmlns:views="clr-namespace:Samples.View"
                 xmlns:viewmodels="clr-namespace:Samples.ViewModel"
                 xmlns:essentials="clr-namespace:Xamarin.Essentials;assembly=Xamarin.Essentials"
                 xmlns:converters="clr-namespace:Samples.Converters;assembly=Samples"
                 xmlns:behaviors="clr-namespace:Samples.Behaviors;assembly=Samples"
                 x:Class="Samples.View.CalendarEventAddPage"
                 x:DataType="viewmodels:CalendarEventAddViewModel"
                 Title="Event"
                 Padding="20,20,20,20">
  <views:BasePage.Resources>
    <ResourceDictionary>
      <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
      <converters:ListSelectorArgsConverter x:Key="ListSelectorArgsConverter" />
    </ResourceDictionary>
  </views:BasePage.Resources>
  <views:BasePage.Content>
    <StackLayout>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Label Text="Calendar:"
               HorizontalTextAlignment="Center"/>
        <Label Text="{Binding CalendarName}"
               Grid.Row="0"
               Grid.Column="1"/>

        <Label Text="Title"
               HorizontalTextAlignment="Center"
               Grid.Row="1"
               Grid.Column="0"/>
        <Entry Placeholder="Title..."
               Text="{Binding EventTitle}"
               Grid.Row="1"
               Grid.Column="1"/>

        <Label Text="Description"
               HorizontalTextAlignment="Center"
               Grid.Row="2"
               Grid.Column="0"/>
        <Entry Placeholder="Description..."
               Text="{Binding Description}"
               Grid.Row="2"
               Grid.Column="1"/>

        <Label Text="Event Location"
               HorizontalTextAlignment="Center"
               Grid.Row="3"
               Grid.Column="0"/>
        <Entry Placeholder="Location..."
               Text="{Binding EventLocation}"
               Grid.Row="3"
               Grid.Column="1"/>

        <Label Text="Url"
               HorizontalTextAlignment="Center"
               Grid.Row="4"
               Grid.Column="0"/>
        <Entry Placeholder="https://..."
               Text="{Binding Url}"
               Grid.Row="4"
               Grid.Column="1"/>

        <Label Text="All Day"
               HorizontalTextAlignment="Center"
               Grid.Row="5"
               Grid.Column="0"/>
        <Switch Grid.Row="5"
                HorizontalOptions="Start"
                IsToggled="{Binding AllDay}"
                Grid.Column="1"/>
      </Grid>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Text="Start Date"
               HorizontalTextAlignment="Center"/>
        <DatePicker Date="{Binding StartDate}"
                    MinimumDate="1970-01-01"
                    Grid.Row="0"
                    Grid.Column="1"/>
        <TimePicker Time="{Binding StartTime}"
                    IsEnabled="{Binding AllDay, Converter={StaticResource InverseBoolConverter}}"
                    Grid.Row="0"
                    Grid.Column="2"/>
        <Label Text="End Date"
               HorizontalTextAlignment="Center"
               Grid.Row="1"
               Grid.Column="0"/>
        <DatePicker Date="{Binding EndDate}"
                    MinimumDate="1970-01-01"
                    IsEnabled="{Binding AllDay, Converter={StaticResource InverseBoolConverter}}"
                    IsVisible="{Binding CanAlterRecurrence, Converter={StaticResource InverseBoolConverter}}"
                    Grid.Row="1"
                    Grid.Column="1"/>
        <TimePicker Time="{Binding EndTime}"
                    IsEnabled="{Binding AllDay, Converter={StaticResource InverseBoolConverter}}"
                    Grid.Row="1"
                    Grid.Column="2"/>
      </Grid>
      <ScrollView>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <StackLayout Grid.Row="0">
            <Picker x:Name="SelectedRecurrenceType"
                    Title="Select a RecurrenceType"
                    ItemsSource="{Binding RecurrenceTypes}"
                    SelectedItem="{Binding SelectedRecurrenceType, Mode=TwoWay}"/>
          </StackLayout>
          <StackLayout Orientation="Horizontal"
                       IsVisible="{Binding CanAlterRecurrence}"
                       Grid.Row="1">
            <Label Text="Every "
                   VerticalTextAlignment="End"/>
            <Picker x:Name="SelectedRecurrenceInterval"
                    Title=""
                    ItemsSource="{Binding RecurrenceInterval}"
                    SelectedItem="{Binding SelectedRecurrenceInterval, Mode=TwoWay}"/>
            <Label Text="{Binding SelectedRecurrenceTypeDisplay, Mode=TwoWay}"
                   VerticalTextAlignment="End"/>
            <Label Text=" on"
                   IsVisible="{Binding IsWeekly}"
                   VerticalTextAlignment="End"/>
          </StackLayout>
          <StackLayout Orientation="Horizontal"
                       IsVisible="{Binding IsDaily}"
                       Grid.Row="2">
            <Label Text="Every Weekday: "/>
            <Switch IsToggled="{Binding IsEveryWeekday}"/>
          </StackLayout>
          <StackLayout BindableLayout.ItemsSource="{Binding RecurrenceDays}"
                       IsVisible="{Binding IsWeekly}"
                       Grid.Row="2">
            <BindableLayout.ItemTemplate>
              <DataTemplate x:DataType="viewmodels:DayOfTheWeekSwitch">
                <StackLayout Orientation="Horizontal">
                  <Switch IsToggled="{Binding IsChecked}" />
                  <Label Text="{Binding Day}"
                         TextColor="Black" />
                </StackLayout>
              </DataTemplate>
            </BindableLayout.ItemTemplate>
          </StackLayout>
          <Grid Grid.Row="2">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding IsYearly}"
                       >
              <Label Text="in "
                     VerticalTextAlignment="End"/>
              <Picker x:Name="SelectedRecurrenceYearlyMonth"
                      Title=""
                      ItemsSource="{Binding RecurrenceYearlyMonth}"
                      SelectedItem="{Binding SelectedRecurrenceYearlyMonth, Mode=TwoWay}"/>
            </StackLayout>
            <StackLayout IsVisible="{Binding IsMonthlyOrYearly}"
                         Grid.Row="1">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Text="By day of the month: "
                       VerticalTextAlignment="Center"/>
                <Switch IsToggled="{Binding IsMonthDaySpecific}"
                        VerticalOptions="Center"
                        Grid.Column="1"/>
                <Picker x:Name="SelectedRecurrenceMonthDay"
                        Title="On day"
                        ItemsSource="{Binding RecurrenceMonthDay}"
                        SelectedItem="{Binding SelectedRecurrenceMonthDay, Mode=TwoWay}"
                        IsEnabled="{Binding IsMonthDaySpecific}"
                        Grid.Column="2"/>
              </Grid>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Picker x:Name="SelectedRecurrenceMonthWeek"
                        Title="On the"
                        ItemsSource="{Binding RecurrenceMonthWeek}"
                        SelectedItem="{Binding SelectedRecurrenceMonthWeek, Mode=TwoWay}"
                        IsEnabled="{Binding IsMonthDaySpecific, Converter={StaticResource InverseBoolConverter}}"/>
                <Picker x:Name="SelectedMonthWeekRecurrenceDay"
                        Title=""
                        ItemsSource="{Binding RecurrenceDays}"
                        SelectedItem="{Binding SelectedMonthWeekRecurrenceDay, Mode=TwoWay}"
                        IsEnabled="{Binding IsMonthDaySpecific, Converter={StaticResource InverseBoolConverter}}"
                        Grid.Column="1"/>
              </Grid>
            </StackLayout>
          </Grid>
          <Grid IsVisible="{Binding CanAlterRecurrence}"
                Grid.Row="3">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Text="Until: "
                   HorizontalTextAlignment="Center"
                   VerticalTextAlignment="End"/>
            <DatePicker Date="{Binding RecurrenceEndDate}"
                        MinimumDate="1970-01-01"
                        IsEnabled="{Binding RecursIndefinitely, Converter={StaticResource InverseBoolConverter}}"
                        Grid.Column="1"/>
            <Label Text="Event Reoccurs Indefinitely:"
                   Grid.Column="2"
                   VerticalTextAlignment="Center"
                   HorizontalOptions="End"/>
            <Switch IsToggled="{Binding RecursIndefinitely}"
                    VerticalOptions="Center"
                    Grid.Column="3"/>
          </Grid>
        </Grid>
      </ScrollView>
      <Button Text="{Binding EventActionText}"
              Command="{Binding CreateOrUpdateEvent}"
              IsEnabled="{Binding CanCreateOrUpdateEvent}"/>
    </StackLayout>
  </views:BasePage.Content>
</views:BasePage>